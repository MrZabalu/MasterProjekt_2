<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Auswertung" Id="{0842150b-4601-4fae-871d-0c9147fd5aad}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Auswertung IMPLEMENTS I_Auswertung
VAR_INPUT
	I_RNr				:INT;
	I_ConnectionHdl		:DWORD;
	I_NameSpace			:STRING(MAX_STRING_LENGTH);
	I_SW				:RezeptStatusWord;
	I_SysSW				:SystemStatusWord;
	I_SekCW				:SekControlWord;
END_VAR

VAR_OUTPUT
	O_Verbunden			:BOOL;
	O_SysSW				:SystemStatusWord;
	O_Error				:BOOL;
	O_ErrorID			:DWORD;
END_VAR

VAR
	V_Status				:INT;						// Interne Variable
	OPC_Status				:INT;
	SysSW					:SystemStatusWord;			// Variable für Handling von SystemStatusWord
	// Instanziierung der Kommunikationsfunktionsblöcke
	NameSpaceInd		:UA_GetNamespaceIndex;
	Node				:UA_NodeGetHandle;
	NodeRelease			:UA_NodeReleaseHandle;
	Write				:UA_Write;
	
	// Instanziierung der relevanten Input-Variablen
	NodeID_SysSW			:ST_UANodeID;
	NodeID_SekCW			:ST_UANodeID;
	NodeIdentifier_SysSW	:STRING(MAX_STRING_LENGTH) := 'GVL_OPC_UA.SysSW';
	NodeIdentifier_SekCW	:STRING(MAX_STRING_LENGTH) := 'GVL_OPC_UA.SekCW';
	
	// Instanziierung der relevanten Output-Variablen
	NameSpaceIndex			:UINT;
	NodeHdl_SysSW			:DWORD;	
	NodeHdl_SekCW			:DWORD;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Setzen der internen Variablen
V_Status := P_Status;

CASE OPC_Status OF 
	0:	// Idle
	
	//==================================================================================================
	1: // GetNameSpace - SystemStatusWord
		NameSpaceInd(Execute := TRUE,
				ConnectionHdl := I_ConnectionHdl,
				NameSpaceUri := I_NameSpace,
				Timeout := T#5S,
				NameSpaceIndex => NameSpaceIndex, 
				Error => O_Error, 
				ErrorID => O_ErrorID);
					
		IF NOT NameSpaceInd.Busy THEN
			NameSpaceInd(Execute := FALSE);
		END_IF
					
		IF NameSpaceInd.Error THEN
			O_Verbunden := FALSE;
			OPC_Status := 0;
		END_IF
		
		IF NameSpaceInd.Done THEN
			OPC_Status := 2;
		END_IF
	
	//==================================================================================================
	2: // GetNode - SystemStatusWord
		NodeID_SysSW.eIdentifierType := eUAIdentifierType_String;
		NodeID_SysSW.nNamespaceIndex := NameSpaceIndex;
		NodeID_SysSW.sIdentifier := NodeIdentifier_SysSW;
	
		Node(Execute := TRUE,
				ConnectionHdl := I_ConnectionHdl,
				NodeID := NodeID_SysSW,
				Timeout := T#5S,
				NodeHdl => NodeHdl_SysSW, 
				Error => O_Error, 
				ErrorID => O_ErrorID);

		IF NOT Node.Busy THEN
			Node(Execute := FALSE);
		END_IF 		
		
		IF Node.Error THEN
			OPC_Status := 0;
		END_IF
		
		IF Node.Done THEN
			OPC_Status := 3; 	
		END_IF
		
	//==================================================================================================
	3: // GetNode - SekControlWord
		NodeID_SekCW.eIdentifierType := eUAIdentifierType_String;
		NodeID_SekCW.nNamespaceIndex := NameSpaceIndex;
		NodeID_SekCW.sIdentifier := NodeIdentifier_SekCW;
	
		// Definieren von SW Node
		Node(Execute := TRUE,
				ConnectionHdl := I_ConnectionHdl,
				NodeID := NodeID_SekCW,
				Timeout := T#5S,
				NodeHdl => NodeHdl_SekCW, 
				Error => O_Error, 
				ErrorID => O_ErrorID);

		IF NOT Node.Busy THEN
			Node(Execute := FALSE);
		END_IF 		
	
	IF Node.Error THEN
		OPC_Status := 0;
	END_IF
	
	IF Node.Done THEN
		OPC_Status := 0;
		O_Verbunden := TRUE;	
	END_IF
	
	//==================================================================================================
	4: // Beschreiben von SystemStatusWord auf allen Reaktoren
	   // Definieren des Zustandes des SystemSatusWords
	   
		CASE I_RNr OF 
			1:	SysSW.R1_Ready := I_SW.ReactReady;
				SysSW.R1_Activ := I_SW.ReactActiv;
				
			2:	SysSW.R2_Ready := I_SW.ReactReady;
				SysSW.R2_Activ := I_SW.ReactActiv;
				
			3:	SysSW.R3_Ready := I_SW.ReactReady;
				SysSW.R3_Activ := I_SW.ReactActiv;
				
			4:	SysSW.R4_Ready := I_SW.ReactReady;
				SysSW.R4_Activ := I_SW.ReactActiv;
				
			5:	SysSW.R5_Ready := I_SW.ReactReady;
				SysSW.R5_Activ := I_SW.ReactActiv;
				
			6:	SysSW.R6_Ready := I_SW.ReactReady;
				SysSW.R6_Activ := I_SW.ReactActiv;
				
			7:	SysSW.R7_Ready := I_SW.ReactReady;
				SysSW.R7_Activ := I_SW.ReactActiv;
		END_CASE
	
		// SystemStatusWord schreiben
		Write(Execute := TRUE,
			ConnectionHdl := I_ConnectionHdl,
			NodeHdl := NodeHdl_SysSW,
			pVariable := ADR(SysSW),
			cbData  := SIZEOF(SysSW),
			Timeout := T#5S,
			Error => O_Error,
			ErrorID => O_ErrorID);
			
		IF NOT Write.Busy THEN
			Write(Execute := FALSE);
		END_IF	
			
		IF Write.Error THEN
			OPC_Status := 0;
		END_IF
		
		IF Write.Done THEN
			O_SysSW := SysSW;
			OPC_Status := 0;
		END_IF	
	
	//==================================================================================================
	5: // Schreiben von Startvariablen für Sekundärreaktor
	
		// SystemStatusWord schreiben
		Write(Execute := TRUE,
			ConnectionHdl := I_ConnectionHdl,
			NodeHdl := NodeHdl_SekCW,
			pVariable := ADR(I_SekCW),
			cbData  := SIZEOF(I_SekCW),
			Timeout := T#5S,
			Error => O_Error,
			ErrorID => O_ErrorID);
		
		IF NOT Write.Busy THEN
			Write(Execute := FALSE);
		END_IF	
			
		IF Write.Error THEN
			OPC_Status := 0;
		END_IF
	
		IF Write.Done THEN
			OPC_Status := 0;
		END_IF	
		
	//==================================================================================================
	6: // ReleaseNode - SystemStatusWord
		NodeRelease(Execute := TRUE,
				ConnectionHdl := I_ConnectionHdl,
				NodeHdl := NodeHdl_SysSW,
				Timeout := T#5S,
				Error => O_Error,
				ErrorID => O_ErrorID);
	
		IF NOT NodeRelease.Busy THEN
			NodeRelease(Execute := FALSE);
		END_IF
		
		IF NodeRelease.Error THEN
			OPC_Status := 0;
		END_IF
	
		IF NodeRelease.Done THEN
			OPC_Status := 7;
		END_IF		
	//==================================================================================================
	7: // ReleaseNode - SekControlWord;
		NodeRelease(Execute := TRUE,
				ConnectionHdl := I_ConnectionHdl,
				NodeHdl := NodeHdl_SekCW,
				Timeout := T#5S,
				Error => O_Error,
				ErrorID => O_ErrorID);
	
		IF NOT NodeRelease.Busy THEN
			NodeRelease(Execute := FALSE);
		END_IF
		
		IF NodeRelease.Error THEN
			OPC_Status := 0;
		END_IF
	
		IF NodeRelease.Done THEN
			OPC_Status := 0;
		END_IF
END_CASE]]></ST>
    </Implementation>
    <Folder Name="01_Methoden" Id="{92064b6d-f7d4-47f7-a899-67dedb43e4a7}" />
    <Folder Name="02_Eigenschaften" Id="{e593f413-129e-450d-b7bc-8a906eb5b0e7}" />
    <Method Name="M_STATUS_SEK" Id="{74eeef1c-bfeb-446e-ad9b-ae822f336fe5}" FolderPath="01_Methoden\">
      <Declaration><![CDATA[METHOD M_STATUS_SEK : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[OPC_Status := 5;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_STATUS_SYSTEM" Id="{9603de6b-8fe5-4482-ae8e-004d0e964aa2}" FolderPath="01_Methoden\">
      <Declaration><![CDATA[METHOD M_STATUS_SYSTEM : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SysSW := I_SysSW;

OPC_Status := 4;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_TRENNEN" Id="{bf136760-2fb3-4eb1-b732-6c62789e7908}" FolderPath="01_Methoden\">
      <Declaration><![CDATA[METHOD M_TRENNEN : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[OPC_Status := 6;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_VERBINDEN" Id="{df7aed53-903a-4160-b680-3b353057e7b0}" FolderPath="01_Methoden\">
      <Declaration><![CDATA[METHOD M_VERBINDEN : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[OPC_Status := 1;]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_Status" Id="{96b1e4b5-188e-4588-b07b-a9774634deee}" FolderPath="02_Eigenschaften\">
      <Declaration><![CDATA[PROPERTY P_Status : INT]]></Declaration>
      <Get Name="Get" Id="{140c7531-55fd-4c04-bd59-4718efe8cb77}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[// Status = 0: System nicht verbunden
// Status = 1: System verbunden
// Status = 2: System wurde beschrieben
// Status = 9: Error

IF O_Verbunden THEN
	P_Status := 1;
	
	IF Write.Done THEN
		P_Status := 2;
	END_IF
	
ELSE
	P_Status := 0;
END_IF

IF O_Error THEN
	P_Status := 9;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="FB_Auswertung">
      <LineId Id="404" Count="0" />
      <LineId Id="402" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="185" Count="18" />
      <LineId Id="86" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="139" Count="21" />
      <LineId Id="37" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="161" Count="23" />
      <LineId Id="39" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="337" Count="0" />
      <LineId Id="255" Count="41" />
      <LineId Id="385" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="339" Count="0" />
      <LineId Id="225" Count="19" />
      <LineId Id="43" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="319" Count="16" />
      <LineId Id="45" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="302" Count="16" />
      <LineId Id="59" Count="0" />
      <LineId Id="28" Count="0" />
    </LineIds>
    <LineIds Name="FB_Auswertung.M_STATUS_SEK">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Auswertung.M_STATUS_SYSTEM">
      <LineId Id="10" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Auswertung.M_TRENNEN">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Auswertung.M_VERBINDEN">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Auswertung.P_Status.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="19" Count="3" />
      <LineId Id="15" Count="2" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="2" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>